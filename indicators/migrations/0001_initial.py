# Generated by Django 2.2.3 on 2019-07-05 09:04

from decimal import Decimal
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('table_id', models.IntegerField(blank=True, null=True)),
                ('remote_owner', models.CharField(blank=True, max_length=255)),
                ('url', models.CharField(blank=True, max_length=255)),
                ('unique_count', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_field_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Additional Field UUID')),
                ('field', models.CharField(max_length=255, unique=True, verbose_name='Field')),
                ('field_type', models.CharField(default='text', max_length=100, verbose_name='Additional Field Type')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
            ],
            options={
                'verbose_name_plural': 'Additional Fields',
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='DisaggregationLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=765)),
                ('customsort', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DisaggregationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disaggregation_type', models.CharField(blank=True, max_length=135)),
                ('description', models.CharField(blank=True, max_length=765)),
                ('standard', models.BooleanField(default=False, verbose_name='Standard (Activity Admins Only)')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DisaggregationValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=765)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('url', models.CharField(blank=True, max_length=765)),
                ('feed_url', models.CharField(blank=True, max_length=765)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalServiceRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_url', models.CharField(blank=True, max_length=765)),
                ('record_id', models.CharField(blank=True, max_length=765, verbose_name='Unique ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Indicator UUID')),
                ('name', models.TextField(max_length=255, verbose_name='Indicator Name')),
                ('definition', models.TextField(blank=True, verbose_name='Indicator Definition')),
                ('key_performance_indicator', models.BooleanField(default=0, verbose_name='Key Performance Indicator?')),
                ('justification', models.TextField(blank=True, max_length=500, null=True, verbose_name='Rationale or Justification for Indicator')),
                ('unit_of_measure', models.TextField(blank=True, max_length=500, verbose_name='Unit of Measure')),
                ('direction_of_change', models.CharField(blank=True, choices=[('increasing', 'Increasing'), ('decreasing', 'Decreasing')], default='increasing', max_length=100, verbose_name='Direction of Change')),
                ('baseline', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=25, null=True, verbose_name='Baseline')),
                ('overall_target', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=25, null=True, verbose_name='Overall Target')),
                ('rationale_for_target', models.TextField(blank=True, max_length=500, verbose_name='Rationale for Target')),
                ('number_of_target_periods', models.IntegerField(default=0, verbose_name='Number of Periodic Target')),
                ('source', models.CharField(blank=True, max_length=255, verbose_name='Source')),
                ('means_of_verification', models.TextField(blank=True, verbose_name='Means of Verification')),
                ('method_of_data_collection', models.TextField(blank=True, max_length=765, verbose_name='Method of Data Collection')),
                ('method_of_analysis', models.CharField(blank=True, max_length=255, verbose_name='Method of Analysis')),
                ('information_use', models.TextField(blank=True, max_length=765, verbose_name='Information Use')),
                ('quality_assurance', models.TextField(blank=True, max_length=765, verbose_name='Quality Assurance Measures')),
                ('data_issues', models.TextField(blank=True, max_length=765, verbose_name='Data Issues')),
                ('notes', models.TextField(blank=True, max_length=765, verbose_name='Changes to Indicator')),
                ('comments', models.TextField(blank=True, max_length=765, verbose_name='Comments')),
                ('additional_field_values', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='Additional Values Object')),
                ('add_to_library', models.BooleanField(default=0, verbose_name='Add Indicator to Library?')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
            ],
            options={
                'ordering': ('name', 'level', 'create_date'),
            },
        ),
        migrations.CreateModel(
            name='IndicatorLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_level_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Indicator IndicatorLevel UUID')),
                ('level', models.CharField(max_length=100, unique=True, verbose_name='Indicator IndicatorLevel')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
            ],
            options={
                'verbose_name_plural': 'Indicator Levels',
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='IndicatorLibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_lib_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Indicator UUID')),
                ('name', models.CharField(max_length=255, verbose_name='Indicator Name')),
                ('definition', models.TextField(blank=True, verbose_name='Indicator Definition')),
                ('key_performance_indicator', models.BooleanField(default=0, verbose_name='Key Performance Indicator?')),
                ('justification', models.TextField(blank=True, max_length=500, null=True, verbose_name='Rationale or Justification for Indicator')),
                ('unit_of_measure', models.TextField(blank=True, max_length=500, verbose_name='Unit of Measure')),
                ('direction_of_change', models.CharField(blank=True, choices=[('increasing', 'Increasing'), ('decreasing', 'Decreasing')], default='increasing', max_length=100, verbose_name='Direction of Change')),
                ('baseline', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=25, null=True, verbose_name='Baseline')),
                ('overall_target', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=25, null=True, verbose_name='Overall Target')),
                ('rationale_for_target', models.TextField(blank=True, max_length=500, verbose_name='Rationale for Target')),
                ('number_of_target_periods', models.IntegerField(default=0, verbose_name='Number of Periodic Target')),
                ('source', models.CharField(blank=True, max_length=255, verbose_name='Source')),
                ('means_of_verification', models.TextField(blank=True, verbose_name='Means of Verification')),
                ('method_of_data_collection', models.TextField(blank=True, max_length=765, verbose_name='Method of Data Collection')),
                ('method_of_analysis', models.CharField(blank=True, max_length=255, verbose_name='Method of Analysis')),
                ('information_use', models.TextField(blank=True, max_length=765, verbose_name='Information Use')),
                ('quality_assurance', models.TextField(blank=True, max_length=765, verbose_name='Quality Assurance Measures')),
                ('data_issues', models.TextField(blank=True, max_length=765, verbose_name='Data Issues')),
                ('notes', models.TextField(blank=True, max_length=765, verbose_name='Changes to Indicator')),
                ('comments', models.TextField(blank=True, max_length=765, verbose_name='Comments')),
                ('additional_field_values', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='Additional Values Object')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='IndicatorResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Indicator Result UUID')),
                ('description', models.TextField(blank=True, max_length=765, verbose_name='Indicator Results Description')),
                ('comment', models.TextField(blank=True, max_length=765, verbose_name='Comment/Explanation')),
                ('result', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=20, verbose_name='Result')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
            ],
            options={
                'ordering': ('indicator',),
            },
        ),
        migrations.CreateModel(
            name='IndicatorTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_tag_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Indicator Tag UUID')),
                ('tag', models.CharField(max_length=100, unique=True, verbose_name='Indicator Tag')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
            ],
            options={
                'verbose_name_plural': 'Indicator Tags',
                'ordering': ('tag',),
            },
        ),
        migrations.CreateModel(
            name='IndicatorType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_type_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Indicator Type UUID')),
                ('type', models.CharField(max_length=100, unique=True, verbose_name='Indicator Type')),
                ('description', models.TextField(blank=True, max_length=765, verbose_name='Indicator Type Description')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
            ],
            options={
                'verbose_name_plural': 'Indicator Types',
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=765)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('country', 'name'),
            },
        ),
        migrations.CreateModel(
            name='ReportingPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Periodic Target UUID')),
                ('period', models.CharField(max_length=65, verbose_name='Reporting Period')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
            ],
            options={
                'verbose_name_plural': 'Reporting Periods',
                'ordering': ('create_date',),
            },
        ),
    ]
