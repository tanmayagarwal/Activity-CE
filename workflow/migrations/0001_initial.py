# Generated by Django 2.2 on 2019-05-22 20:11

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, choices=[('mr', 'Mr.'), ('mrs', 'Mrs.'), ('ms', 'Ms.')], max_length=3, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Given Name')),
                ('employee_number', models.IntegerField(blank=True, null=True, verbose_name='Employee Number')),
                ('tables_api_token', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_api_token', models.CharField(blank=True, max_length=255, null=True)),
                ('privacy_disclaimer_accepted', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='AdminLevelThree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Admin Level 3')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Admin Level 3',
                'verbose_name_plural': 'Admin Level 3',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Capacity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Capacity')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Capacity',
                'ordering': ('capacity',),
            },
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Checklist', max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('agreement',),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City/Town')),
                ('address', models.TextField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Phone')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Contact',
                'ordering': ('name', 'country', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=255, verbose_name='Country Name')),
                ('code', models.CharField(blank=True, max_length=4, verbose_name='2 Letter Country Code')),
                ('description', models.TextField(blank=True, max_length=765, verbose_name='Description/Notes')),
                ('latitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Latitude')),
                ('longitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Longitude')),
                ('zoom', models.IntegerField(default=5, verbose_name='Zoom')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ('country',),
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Currency Name')),
                ('symbol', models.CharField(blank=True, max_length=10, verbose_name='Currency Symbol')),
                ('code', models.CharField(blank=True, max_length=20, verbose_name='Currency Code')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Currencies',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Admin Level 2')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Admin Level 2',
                'verbose_name_plural': 'Admin Level 2',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Documentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=135, null=True, verbose_name='Name of Document')),
                ('url', models.CharField(blank=True, max_length=135, null=True, verbose_name='URL (Link to document or document repository)')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('file_field', models.FileField(blank=True, null=True, upload_to='uploads')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Documentation',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Evaluate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluate', models.CharField(blank=True, max_length=255, null=True, verbose_name='How will you evaluate the outcome or impact of the project?')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Evaluate',
                'ordering': ('evaluate',),
            },
        ),
        migrations.CreateModel(
            name='FormGuidance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.CharField(blank=True, max_length=135, null=True)),
                ('guidance_link', models.URLField(blank=True, null=True)),
                ('guidance', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='FundCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Fund Code')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='LandType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classify_land', models.CharField(blank=True, help_text='Rural, Urban, Peri-Urban', max_length=100, verbose_name='Land Classification')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('classify_land',),
            },
        ),
        migrations.CreateModel(
            name='LoggedUser',
            fields=[
                ('username', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=100)),
                ('email', models.CharField(default='user@mercycorps.com', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Office Name')),
                ('code', models.CharField(blank=True, max_length=255, verbose_name='Office Code')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Hikaya', max_length=255, verbose_name='Organization Name')),
                ('description', models.TextField(blank=True, max_length=765, null=True, verbose_name='Description/Notes')),
                ('logo', models.FileField(blank=True, null=True, upload_to='media/img/', verbose_name='Your Organization Logo')),
                ('organization_url', models.CharField(blank=True, max_length=255, null=True)),
                ('level_1_label', models.CharField(blank=True, default='Program', max_length=255, verbose_name='Project/Program Organization Level 1 label')),
                ('level_2_label', models.CharField(blank=True, default='Project', max_length=255, verbose_name='Project/Program Organization Level 2 label')),
                ('level_3_label', models.CharField(blank=True, default='Component', max_length=255, verbose_name='Project/Program Organization Level 3 label')),
                ('level_4_label', models.CharField(blank=True, default='Activity', max_length=255, verbose_name='Project/Program Organization Level 4 label')),
                ('stakeholder_label', models.CharField(default='Stakeholder', max_length=255, verbose_name='Stakeholder Organization label')),
                ('form_label', models.CharField(default='Form', max_length=255, verbose_name='Form Organization label')),
                ('indicator_label', models.CharField(default='Indicator', max_length=255, verbose_name='Indicator Organization label')),
                ('site_label', models.CharField(default='Site', max_length=255, verbose_name='Site Organization label')),
                ('default_language', models.CharField(default='English-US', max_length=50, verbose_name='Organization language')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('theme_color', models.CharField(default='25ced1', max_length=6, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length has to be 6', regex='^.{6}$')], verbose_name='Organization Costum Color')),
                ('default_currency', models.ForeignKey(blank=True, help_text='Organization currency', null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Currency')),
            ],
            options={
                'verbose_name_plural': 'Organizations',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProfileType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.CharField(blank=True, max_length=255, verbose_name='Profile Type')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('profile',),
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gaitid', models.CharField(blank=True, max_length=255, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Program Name')),
                ('funding_status', models.CharField(blank=True, max_length=255, verbose_name='Funding Status')),
                ('cost_center', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund Code')),
                ('description', models.TextField(blank=True, max_length=765, null=True, verbose_name='Program Description')),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('budget_check', models.BooleanField(default=False, verbose_name='Enable Approval Authority')),
                ('public_dashboard', models.BooleanField(default=False, verbose_name='Enable Public Dashboard')),
                ('country', models.ManyToManyField(to='workflow.Country')),
                ('fund_code', models.ManyToManyField(blank=True, to='workflow.FundCode')),
                ('organization', models.ForeignKey(blank=True, help_text='Program Organization', null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Organization')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProjectAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short', models.BooleanField(default=True, verbose_name='Short Form (recommended)')),
                ('date_of_request', models.DateTimeField(blank=True, null=True, verbose_name='Date of Request')),
                ('project_name', models.CharField(help_text='Please be specific in your name.  Consider that your Project Name includes WHO, WHAT, WHERE, HOW', max_length=255, verbose_name='Project Name')),
                ('project_activity', models.CharField(blank=True, help_text='This should come directly from the activities listed in the Logframe', max_length=255, null=True, verbose_name='Project Activity')),
                ('project_description', models.TextField(blank=True, null=True, verbose_name='Project Description')),
                ('has_rej_letter', models.BooleanField(default=False, help_text='If yes attach copy', verbose_name='If Rejected: Rejection Letter Sent?')),
                ('activity_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Code')),
                ('cod_num', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project COD #')),
                ('project_design', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity design for')),
                ('account_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund Code')),
                ('lin_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Code')),
                ('staff_responsible', models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff Responsible')),
                ('partners', models.BooleanField(default=0, verbose_name='Are there partners involved?')),
                ('name_of_partners', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of Partners')),
                ('effect_or_impact', models.TextField(blank=True, null=True, verbose_name='What is the anticipated Outcome or Goal?')),
                ('expected_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Expected starting date')),
                ('expected_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Expected ending date')),
                ('expected_duration', models.CharField(blank=True, help_text='[MONTHS]/[DAYS]', max_length=255, null=True, verbose_name='Expected duration')),
                ('beneficiary_type', models.CharField(blank=True, help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries')),
                ('estimated_num_direct_beneficiaries', models.CharField(blank=True, help_text="Please provide achievable estimates as we will use these as our 'Targets'", max_length=255, null=True, verbose_name='Estimated number of direct beneficiaries')),
                ('average_household_size', models.CharField(blank=True, help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size')),
                ('estimated_num_indirect_beneficiaries', models.CharField(blank=True, help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries')),
                ('total_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Total Project Budget')),
                ('mc_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Organizations portion of Project Budget')),
                ('local_total_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Estimated Total in Local Currency')),
                ('local_mc_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='Total portion of estimate for your agency', max_digits=12, verbose_name='Estimated Organization Total in Local Currency')),
                ('exchange_rate', models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True)),
                ('exchange_rate_date', models.DateField(blank=True, help_text='Date of exchange rate', null=True)),
                ('community_rep', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Representative')),
                ('community_rep_contact', models.CharField(blank=True, help_text='Can have mulitple contact numbers', max_length=255, null=True, verbose_name='Community Representative Contact')),
                ('community_mobilizer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer')),
                ('community_mobilizer_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer Contact Number')),
                ('community_proposal', models.FileField(blank=True, null=True, upload_to='uploads', verbose_name='Community Proposal')),
                ('estimate_male_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Trained')),
                ('estimate_female_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Trained')),
                ('estimate_total_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # Trained')),
                ('estimate_trainings', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Trainings Conducted')),
                ('distribution_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type of Items Distributed')),
                ('distribution_uom', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit of Measure')),
                ('distribution_estimate', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated # of Items Distributed')),
                ('cfw_estimate_male', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Laborers')),
                ('cfw_estimate_female', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Laborers')),
                ('cfw_estimate_total', models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # of Laborers')),
                ('cfw_estimate_project_days', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Project Days')),
                ('cfw_estimate_person_days', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Person Days')),
                ('cfw_estimate_cost_materials', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Total Cost of Materials')),
                ('cfw_estimate_wages_budgeted', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Wages Budgeted')),
                ('estimation_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Originated')),
                ('checked_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Checked')),
                ('reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Verified')),
                ('finance_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Reviewed by Finance')),
                ('me_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Reviewed by M&E')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status')),
                ('approved_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Approved')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approval Remarks')),
                ('justification_background', models.TextField(blank=True, null=True, verbose_name='General Background and Problem Statement')),
                ('risks_assumptions', models.TextField(blank=True, null=True, verbose_name='Risks and Assumptions')),
                ('justification_description_community_selection', models.TextField(blank=True, null=True, verbose_name='Description of Stakeholder Selection Criteria')),
                ('description_of_project_activities', models.TextField(blank=True, null=True)),
                ('description_of_government_involvement', models.TextField(blank=True, null=True)),
                ('description_of_community_involvement', models.TextField(blank=True, null=True)),
                ('community_project_description', models.TextField(blank=True, help_text='Description must describe how the Community Proposal meets the project criteria', null=True, verbose_name='Describe the project you would like the program to consider')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Edit Date')),
                ('approval_submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_by_agreement', to='workflow.ActivityUser')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approving_agreement', to='workflow.ActivityUser', verbose_name='Request approval')),
                ('capacity', models.ManyToManyField(blank=True, to='workflow.Capacity', verbose_name='Sustainability Plan')),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checking', to='workflow.ActivityUser')),
                ('estimated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estimating', to='workflow.ActivityUser', verbose_name='Originated By')),
                ('evaluate', models.ManyToManyField(blank=True, to='workflow.Evaluate')),
                ('finance_reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finance_reviewing', to='workflow.ActivityUser')),
                ('me_reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewing_me', to='workflow.ActivityUser', verbose_name='M&E Reviewed by')),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Office', verbose_name='Office')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agreement', to='workflow.Program', verbose_name='Program')),
            ],
            options={
                'verbose_name_plural': 'Project Initiation',
                'ordering': ('project_name',),
                'permissions': (('can_approve', 'Can approve initiation'),),
            },
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=135, verbose_name='Type of Activity')),
                ('description', models.CharField(max_length=765)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Admin Level 1')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Country')),
            ],
            options={
                'verbose_name': 'Admin Level 1',
                'verbose_name_plural': 'Admin Level 1',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(blank=True, max_length=255, verbose_name='Sector Name')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('sector',),
            },
        ),
        migrations.CreateModel(
            name='StakeholderType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Stakeholder Type')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Stakeholder Types',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=135, verbose_name='Name of Document')),
                ('documentation_type', models.CharField(max_length=135, verbose_name='Type (File or URL)')),
                ('description', models.CharField(max_length=765)),
                ('file_field', models.FileField(blank=True, null=True, upload_to='uploads')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Admin Level 4')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('admin_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.AdminLevelThree', verbose_name='Admin Level 3')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.District')),
            ],
            options={
                'verbose_name': 'Admin Level 4',
                'verbose_name_plural': 'Admin Level 4',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Stakeholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Stakeholder/Organization Name')),
                ('stakeholder_register', models.BooleanField(verbose_name='Has this partner been added to stakeholder register?')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval')),
                ('notes', models.TextField(blank=True, max_length=765, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stake_approving', to='workflow.ActivityUser')),
                ('contact', models.ManyToManyField(blank=True, max_length=255, to='workflow.Contact')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Country')),
                ('filled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stake_filled', to='workflow.ActivityUser')),
                ('formal_relationship_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relationship_document', to='workflow.Documentation', verbose_name='Formal Written Description of Relationship')),
                ('sectors', models.ManyToManyField(blank=True, to='workflow.Sector')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.StakeholderType')),
                ('vetting_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vetting_document', to='workflow.Documentation', verbose_name='Vetting/ due diligence statement')),
            ],
            options={
                'verbose_name_plural': 'Stakeholders',
                'ordering': ('country', 'name', 'type'),
            },
        ),
        migrations.CreateModel(
            name='SiteProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Site Name')),
                ('contact_leader', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Name')),
                ('date_of_firstcontact', models.DateTimeField(blank=True, null=True, verbose_name='Date of First Contact')),
                ('contact_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Number')),
                ('num_members', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of Members')),
                ('info_source', models.CharField(blank=True, max_length=255, null=True, verbose_name='Data Source')),
                ('total_num_households', models.IntegerField(blank=True, null=True, verbose_name='Total # Households')),
                ('avg_household_size', models.DecimalField(decimal_places=14, default=Decimal('0.00'), max_digits=25, verbose_name='Average Household Size')),
                ('male_0_5', models.IntegerField(blank=True, null=True, verbose_name='Male age 0-5')),
                ('female_0_5', models.IntegerField(blank=True, null=True, verbose_name='Female age 0-5')),
                ('male_6_9', models.IntegerField(blank=True, null=True, verbose_name='Male age 6-9 ')),
                ('female_6_9', models.IntegerField(blank=True, null=True, verbose_name='Female age 6-9')),
                ('male_10_14', models.IntegerField(blank=True, null=True, verbose_name='Male age 10-14')),
                ('female_10_14', models.IntegerField(blank=True, null=True, verbose_name='Female age 10-14')),
                ('male_15_19', models.IntegerField(blank=True, null=True, verbose_name='Male age 15-19')),
                ('female_15_19', models.IntegerField(blank=True, null=True, verbose_name='Female age 15-19')),
                ('male_20_24', models.IntegerField(blank=True, null=True, verbose_name='Male age 20-24')),
                ('female_20_24', models.IntegerField(blank=True, null=True, verbose_name='Female age 20-24')),
                ('male_25_34', models.IntegerField(blank=True, null=True, verbose_name='Male age 25-34')),
                ('female_25_34', models.IntegerField(blank=True, null=True, verbose_name='Female age 25-34')),
                ('male_35_49', models.IntegerField(blank=True, null=True, verbose_name='Male age 35-49')),
                ('female_35_49', models.IntegerField(blank=True, null=True, verbose_name='Female age 35-49')),
                ('male_over_50', models.IntegerField(blank=True, null=True, verbose_name='Male Over 50')),
                ('female_over_50', models.IntegerField(blank=True, null=True, verbose_name='Female Over 50')),
                ('total_population', models.IntegerField(blank=True, null=True)),
                ('total_male', models.IntegerField(blank=True, null=True)),
                ('total_female', models.IntegerField(blank=True, null=True)),
                ('total_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Land')),
                ('total_agricultural_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Agricultural Land')),
                ('total_rainfed_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Rain-fed Land')),
                ('total_horticultural_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Horticultural Land')),
                ('total_literate_peoples', models.IntegerField(blank=True, null=True, verbose_name='Total Literate People')),
                ('literate_males', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Males')),
                ('literate_females', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Females')),
                ('literacy_rate', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='Literacy Rate (%)')),
                ('populations_owning_land', models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Land')),
                ('avg_landholding_size', models.DecimalField(decimal_places=14, default=Decimal('0.00'), help_text='In hectares/jeribs', max_digits=25, verbose_name='Average Landholding Size')),
                ('households_owning_livestock', models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Livestock')),
                ('animal_type', models.CharField(blank=True, help_text='List Animal Types', max_length=255, null=True, verbose_name='Animal Types')),
                ('village', models.CharField(blank=True, max_length=255, null=True, verbose_name='Administrative Level 4')),
                ('latitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Latitude (Decimal Coordinates)')),
                ('longitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Longitude (Decimal Coordinates)')),
                ('status', models.BooleanField(default=True, verbose_name='Site Active')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('admin_level_three', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.AdminLevelThree', verbose_name='Administrative Level 3')),
                ('approved_by', models.ForeignKey(blank=True, help_text='This is the Provincial Line Manager', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comm_approving', to='workflow.ActivityUser')),
                ('classify_land', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.LandType')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Country')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.District', verbose_name='Administrative Level 2')),
                ('filled_by', models.ForeignKey(blank=True, help_text='This is the originator', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comm_estimate', to='workflow.ActivityUser')),
                ('location_verified_by', models.ForeignKey(blank=True, help_text='This should be GIS Manager', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comm_gis', to='workflow.ActivityUser')),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Office')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Province', verbose_name='Administrative Level 1')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProfileType')),
            ],
            options={
                'verbose_name_plural': 'Site Profiles',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProjectComplete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short', models.BooleanField(default=True, verbose_name='Short Form (recommended)')),
                ('activity_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Code')),
                ('project_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Name')),
                ('project_activity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Activity')),
                ('expected_start_date', models.DateTimeField(blank=True, help_text='Imported from Project Initiation', null=True)),
                ('expected_end_date', models.DateTimeField(blank=True, help_text='Imported Project Initiation', null=True)),
                ('expected_duration', models.CharField(blank=True, help_text='Imported from Project Initiation', max_length=255, null=True, verbose_name='Expected Duration')),
                ('actual_start_date', models.DateTimeField(blank=True, help_text='Imported from Project Initiation', null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('actual_duration', models.CharField(blank=True, max_length=255, null=True)),
                ('on_time', models.BooleanField(default=None)),
                ('no_explanation', models.TextField(blank=True, null=True, verbose_name='If not on time explain delay')),
                ('account_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund Code')),
                ('lin_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Code')),
                ('estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Estimated Budget')),
                ('actual_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='What was the actual final cost?  This should match any financial documentation you have in the file. It should be completely documented and verifiable by finance and any potential audit', max_digits=20, verbose_name='Actual Cost')),
                ('actual_cost_date', models.DateTimeField(blank=True, null=True)),
                ('budget_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Budget versus Actual variance')),
                ('explanation_of_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Explanation of variance')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Estimated Budget for Organization')),
                ('agency_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Actual Cost for Organization')),
                ('local_total_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost')),
                ('local_agency_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost for Organization')),
                ('exchange_rate', models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True)),
                ('exchange_rate_date', models.DateField(blank=True, help_text='Date of exchange rate', null=True)),
                ('beneficiary_type', models.CharField(blank=True, help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries')),
                ('average_household_size', models.CharField(blank=True, help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size')),
                ('indirect_beneficiaries', models.CharField(blank=True, help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries')),
                ('direct_beneficiaries', models.CharField(blank=True, max_length=255, null=True, verbose_name='Actual Direct Beneficiaries')),
                ('jobs_created', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of Jobs Created')),
                ('jobs_part_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Part Time Jobs')),
                ('jobs_full_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Time Jobs')),
                ('progress_against_targets', models.IntegerField(blank=True, null=True, verbose_name='Progress against Targets (%)')),
                ('government_involvement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Government Involvement')),
                ('community_involvement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Involvement')),
                ('community_handover', models.BooleanField(default=None, help_text='Check box if it was completed', verbose_name='CommunityHandover/Sustainability Maintenance Plan')),
                ('capacity_built', models.TextField(blank=True, max_length=755, null=True, verbose_name='Describe how sustainability was ensured for this project?')),
                ('quality_assured', models.TextField(blank=True, max_length=755, null=True, verbose_name='How was quality assured for this project')),
                ('issues_and_challenges', models.TextField(blank=True, null=True, verbose_name='List any issues or challenges faced (include reasons for delays)')),
                ('lessons_learned', models.TextField(blank=True, null=True, verbose_name='Lessons learned')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approval Remarks')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Edit Date')),
                ('approval_submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_by_complete', to='workflow.ActivityUser')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approving_agreement_complete', to='workflow.ActivityUser')),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checking_complete', to='workflow.ActivityUser')),
                ('estimated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estimating_complete', to='workflow.ActivityUser')),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Office')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complete', to='workflow.Program')),
                ('project_agreement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectAgreement', verbose_name='Project Initiation')),
                ('project_type', models.ForeignKey(blank=True, max_length=255, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProjectType')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewing_complete', to='workflow.ActivityUser')),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Sector')),
                ('site', models.ManyToManyField(blank=True, to='workflow.SiteProfile')),
                ('stakeholder', models.ManyToManyField(blank=True, to='workflow.Stakeholder')),
            ],
            options={
                'verbose_name_plural': 'Project Tracking',
                'ordering': ('project_name',),
            },
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='project_type',
            field=models.ForeignKey(blank=True, max_length=255, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProjectType', verbose_name='Project Type'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewing', to='workflow.ActivityUser', verbose_name='Request review'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Sector', verbose_name='Sector'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='site',
            field=models.ManyToManyField(blank=True, to='workflow.SiteProfile'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='stakeholder',
            field=models.ManyToManyField(blank=True, to='workflow.Stakeholder', verbose_name='Stakeholders'),
        ),
        migrations.AddField(
            model_name='program',
            name='sector',
            field=models.ManyToManyField(blank=True, to='workflow.Sector'),
        ),
        migrations.AddField(
            model_name='program',
            name='user_access',
            field=models.ManyToManyField(blank=True, to='workflow.ActivityUser'),
        ),
        migrations.AddField(
            model_name='office',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Province', verbose_name='Admin Level 1'),
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsible_person', models.CharField(blank=True, max_length=25, null=True, verbose_name='Person Responsible')),
                ('frequency', models.CharField(blank=True, max_length=25, null=True, verbose_name='Frequency')),
                ('type', models.TextField(blank=True, null=True, verbose_name='Type')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('agreement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProjectAgreement', verbose_name='Project Initiation')),
                ('complete', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProjectComplete')),
            ],
            options={
                'verbose_name_plural': 'Monitors',
                'ordering': ('type',),
            },
        ),
        migrations.CreateModel(
            name='HistoricalSiteProfile',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Site Name')),
                ('contact_leader', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Name')),
                ('date_of_firstcontact', models.DateTimeField(blank=True, null=True, verbose_name='Date of First Contact')),
                ('contact_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Number')),
                ('num_members', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of Members')),
                ('info_source', models.CharField(blank=True, max_length=255, null=True, verbose_name='Data Source')),
                ('total_num_households', models.IntegerField(blank=True, null=True, verbose_name='Total # Households')),
                ('avg_household_size', models.DecimalField(decimal_places=14, default=Decimal('0.00'), max_digits=25, verbose_name='Average Household Size')),
                ('male_0_5', models.IntegerField(blank=True, null=True, verbose_name='Male age 0-5')),
                ('female_0_5', models.IntegerField(blank=True, null=True, verbose_name='Female age 0-5')),
                ('male_6_9', models.IntegerField(blank=True, null=True, verbose_name='Male age 6-9 ')),
                ('female_6_9', models.IntegerField(blank=True, null=True, verbose_name='Female age 6-9')),
                ('male_10_14', models.IntegerField(blank=True, null=True, verbose_name='Male age 10-14')),
                ('female_10_14', models.IntegerField(blank=True, null=True, verbose_name='Female age 10-14')),
                ('male_15_19', models.IntegerField(blank=True, null=True, verbose_name='Male age 15-19')),
                ('female_15_19', models.IntegerField(blank=True, null=True, verbose_name='Female age 15-19')),
                ('male_20_24', models.IntegerField(blank=True, null=True, verbose_name='Male age 20-24')),
                ('female_20_24', models.IntegerField(blank=True, null=True, verbose_name='Female age 20-24')),
                ('male_25_34', models.IntegerField(blank=True, null=True, verbose_name='Male age 25-34')),
                ('female_25_34', models.IntegerField(blank=True, null=True, verbose_name='Female age 25-34')),
                ('male_35_49', models.IntegerField(blank=True, null=True, verbose_name='Male age 35-49')),
                ('female_35_49', models.IntegerField(blank=True, null=True, verbose_name='Female age 35-49')),
                ('male_over_50', models.IntegerField(blank=True, null=True, verbose_name='Male Over 50')),
                ('female_over_50', models.IntegerField(blank=True, null=True, verbose_name='Female Over 50')),
                ('total_population', models.IntegerField(blank=True, null=True)),
                ('total_male', models.IntegerField(blank=True, null=True)),
                ('total_female', models.IntegerField(blank=True, null=True)),
                ('total_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Land')),
                ('total_agricultural_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Agricultural Land')),
                ('total_rainfed_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Rain-fed Land')),
                ('total_horticultural_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Horticultural Land')),
                ('total_literate_peoples', models.IntegerField(blank=True, null=True, verbose_name='Total Literate People')),
                ('literate_males', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Males')),
                ('literate_females', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Females')),
                ('literacy_rate', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='Literacy Rate (%)')),
                ('populations_owning_land', models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Land')),
                ('avg_landholding_size', models.DecimalField(decimal_places=14, default=Decimal('0.00'), help_text='In hectares/jeribs', max_digits=25, verbose_name='Average Landholding Size')),
                ('households_owning_livestock', models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Livestock')),
                ('animal_type', models.CharField(blank=True, help_text='List Animal Types', max_length=255, null=True, verbose_name='Animal Types')),
                ('village', models.CharField(blank=True, max_length=255, null=True, verbose_name='Administrative Level 4')),
                ('latitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Latitude (Decimal Coordinates)')),
                ('longitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Longitude (Decimal Coordinates)')),
                ('status', models.BooleanField(default=True, verbose_name='Site Active')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('admin_level_three', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.AdminLevelThree', verbose_name='Administrative Level 3')),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, help_text='This is the Provincial Line Manager', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser')),
                ('classify_land', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.LandType')),
                ('country', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Country')),
                ('district', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.District', verbose_name='Administrative Level 2')),
                ('filled_by', models.ForeignKey(blank=True, db_constraint=False, help_text='This is the originator', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location_verified_by', models.ForeignKey(blank=True, db_constraint=False, help_text='This should be GIS Manager', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser')),
                ('office', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Office')),
                ('province', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Province', verbose_name='Administrative Level 1')),
                ('type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProfileType')),
            ],
            options={
                'verbose_name': 'historical site profile',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProjectComplete',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('short', models.BooleanField(default=True, verbose_name='Short Form (recommended)')),
                ('activity_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Code')),
                ('project_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Name')),
                ('project_activity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Activity')),
                ('expected_start_date', models.DateTimeField(blank=True, help_text='Imported from Project Initiation', null=True)),
                ('expected_end_date', models.DateTimeField(blank=True, help_text='Imported Project Initiation', null=True)),
                ('expected_duration', models.CharField(blank=True, help_text='Imported from Project Initiation', max_length=255, null=True, verbose_name='Expected Duration')),
                ('actual_start_date', models.DateTimeField(blank=True, help_text='Imported from Project Initiation', null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('actual_duration', models.CharField(blank=True, max_length=255, null=True)),
                ('on_time', models.BooleanField(default=None)),
                ('no_explanation', models.TextField(blank=True, null=True, verbose_name='If not on time explain delay')),
                ('account_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund Code')),
                ('lin_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Code')),
                ('estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Estimated Budget')),
                ('actual_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='What was the actual final cost?  This should match any financial documentation you have in the file. It should be completely documented and verifiable by finance and any potential audit', max_digits=20, verbose_name='Actual Cost')),
                ('actual_cost_date', models.DateTimeField(blank=True, null=True)),
                ('budget_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Budget versus Actual variance')),
                ('explanation_of_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Explanation of variance')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Estimated Budget for Organization')),
                ('agency_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Actual Cost for Organization')),
                ('local_total_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost')),
                ('local_agency_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost for Organization')),
                ('exchange_rate', models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True)),
                ('exchange_rate_date', models.DateField(blank=True, help_text='Date of exchange rate', null=True)),
                ('beneficiary_type', models.CharField(blank=True, help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries')),
                ('average_household_size', models.CharField(blank=True, help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size')),
                ('indirect_beneficiaries', models.CharField(blank=True, help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries')),
                ('direct_beneficiaries', models.CharField(blank=True, max_length=255, null=True, verbose_name='Actual Direct Beneficiaries')),
                ('jobs_created', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of Jobs Created')),
                ('jobs_part_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Part Time Jobs')),
                ('jobs_full_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Time Jobs')),
                ('progress_against_targets', models.IntegerField(blank=True, null=True, verbose_name='Progress against Targets (%)')),
                ('government_involvement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Government Involvement')),
                ('community_involvement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Involvement')),
                ('community_handover', models.BooleanField(default=None, help_text='Check box if it was completed', verbose_name='CommunityHandover/Sustainability Maintenance Plan')),
                ('capacity_built', models.TextField(blank=True, max_length=755, null=True, verbose_name='Describe how sustainability was ensured for this project?')),
                ('quality_assured', models.TextField(blank=True, max_length=755, null=True, verbose_name='How was quality assured for this project')),
                ('issues_and_challenges', models.TextField(blank=True, null=True, verbose_name='List any issues or challenges faced (include reasons for delays)')),
                ('lessons_learned', models.TextField(blank=True, null=True, verbose_name='Lessons learned')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approval Remarks')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approval_submitted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser')),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser')),
                ('checked_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser')),
                ('estimated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('office', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Office')),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Program')),
                ('project_agreement', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProjectAgreement', verbose_name='Project Initiation')),
                ('project_type', models.ForeignKey(blank=True, db_constraint=False, max_length=255, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProjectType')),
                ('reviewed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser')),
                ('sector', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Sector')),
            ],
            options={
                'verbose_name': 'historical project complete',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProjectAgreement',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('short', models.BooleanField(default=True, verbose_name='Short Form (recommended)')),
                ('date_of_request', models.DateTimeField(blank=True, null=True, verbose_name='Date of Request')),
                ('project_name', models.CharField(help_text='Please be specific in your name.  Consider that your Project Name includes WHO, WHAT, WHERE, HOW', max_length=255, verbose_name='Project Name')),
                ('project_activity', models.CharField(blank=True, help_text='This should come directly from the activities listed in the Logframe', max_length=255, null=True, verbose_name='Project Activity')),
                ('project_description', models.TextField(blank=True, null=True, verbose_name='Project Description')),
                ('has_rej_letter', models.BooleanField(default=False, help_text='If yes attach copy', verbose_name='If Rejected: Rejection Letter Sent?')),
                ('activity_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Code')),
                ('cod_num', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project COD #')),
                ('project_design', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity design for')),
                ('account_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund Code')),
                ('lin_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Code')),
                ('staff_responsible', models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff Responsible')),
                ('partners', models.BooleanField(default=0, verbose_name='Are there partners involved?')),
                ('name_of_partners', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of Partners')),
                ('effect_or_impact', models.TextField(blank=True, null=True, verbose_name='What is the anticipated Outcome or Goal?')),
                ('expected_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Expected starting date')),
                ('expected_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Expected ending date')),
                ('expected_duration', models.CharField(blank=True, help_text='[MONTHS]/[DAYS]', max_length=255, null=True, verbose_name='Expected duration')),
                ('beneficiary_type', models.CharField(blank=True, help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries')),
                ('estimated_num_direct_beneficiaries', models.CharField(blank=True, help_text="Please provide achievable estimates as we will use these as our 'Targets'", max_length=255, null=True, verbose_name='Estimated number of direct beneficiaries')),
                ('average_household_size', models.CharField(blank=True, help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size')),
                ('estimated_num_indirect_beneficiaries', models.CharField(blank=True, help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries')),
                ('total_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Total Project Budget')),
                ('mc_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Organizations portion of Project Budget')),
                ('local_total_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Estimated Total in Local Currency')),
                ('local_mc_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='Total portion of estimate for your agency', max_digits=12, verbose_name='Estimated Organization Total in Local Currency')),
                ('exchange_rate', models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True)),
                ('exchange_rate_date', models.DateField(blank=True, help_text='Date of exchange rate', null=True)),
                ('community_rep', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Representative')),
                ('community_rep_contact', models.CharField(blank=True, help_text='Can have mulitple contact numbers', max_length=255, null=True, verbose_name='Community Representative Contact')),
                ('community_mobilizer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer')),
                ('community_mobilizer_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer Contact Number')),
                ('community_proposal', models.TextField(blank=True, max_length=100, null=True, verbose_name='Community Proposal')),
                ('estimate_male_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Trained')),
                ('estimate_female_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Trained')),
                ('estimate_total_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # Trained')),
                ('estimate_trainings', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Trainings Conducted')),
                ('distribution_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type of Items Distributed')),
                ('distribution_uom', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit of Measure')),
                ('distribution_estimate', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated # of Items Distributed')),
                ('cfw_estimate_male', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Laborers')),
                ('cfw_estimate_female', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Laborers')),
                ('cfw_estimate_total', models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # of Laborers')),
                ('cfw_estimate_project_days', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Project Days')),
                ('cfw_estimate_person_days', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Person Days')),
                ('cfw_estimate_cost_materials', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Total Cost of Materials')),
                ('cfw_estimate_wages_budgeted', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Wages Budgeted')),
                ('estimation_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Originated')),
                ('checked_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Checked')),
                ('reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Verified')),
                ('finance_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Reviewed by Finance')),
                ('me_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Reviewed by M&E')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status')),
                ('approved_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Approved')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approval Remarks')),
                ('justification_background', models.TextField(blank=True, null=True, verbose_name='General Background and Problem Statement')),
                ('risks_assumptions', models.TextField(blank=True, null=True, verbose_name='Risks and Assumptions')),
                ('justification_description_community_selection', models.TextField(blank=True, null=True, verbose_name='Description of Stakeholder Selection Criteria')),
                ('description_of_project_activities', models.TextField(blank=True, null=True)),
                ('description_of_government_involvement', models.TextField(blank=True, null=True)),
                ('description_of_community_involvement', models.TextField(blank=True, null=True)),
                ('community_project_description', models.TextField(blank=True, help_text='Description must describe how the Community Proposal meets the project criteria', null=True, verbose_name='Describe the project you would like the program to consider')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approval_submitted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser')),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser', verbose_name='Request approval')),
                ('checked_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser')),
                ('estimated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser', verbose_name='Originated By')),
                ('finance_reviewed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('me_reviewed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser', verbose_name='M&E Reviewed by')),
                ('office', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Office', verbose_name='Office')),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Program', verbose_name='Program')),
                ('project_type', models.ForeignKey(blank=True, db_constraint=False, max_length=255, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProjectType', verbose_name='Project Type')),
                ('reviewed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ActivityUser', verbose_name='Request review')),
                ('sector', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Sector', verbose_name='Sector')),
            ],
            options={
                'verbose_name': 'historical project agreement',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBudget',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('contributor', models.CharField(blank=True, max_length=135, null=True)),
                ('description_of_contribution', models.CharField(blank=True, max_length=255, null=True)),
                ('proposed_value', models.IntegerField(blank=True, default=0, null=True, verbose_name='Value')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('agreement', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProjectAgreement', verbose_name='Project Initiation')),
                ('complete', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProjectComplete')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical budget',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='documentation',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Program'),
        ),
        migrations.AddField(
            model_name='documentation',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProjectAgreement'),
        ),
        migrations.AddField(
            model_name='documentation',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Template'),
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Province', verbose_name='Admin Level 1'),
        ),
        migrations.AddField(
            model_name='country',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Organization'),
        ),
        migrations.AddField(
            model_name='contact',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Country'),
        ),
        migrations.CreateModel(
            name='ChecklistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=255)),
                ('in_file', models.BooleanField(default=False)),
                ('not_applicable', models.BooleanField(default=False)),
                ('global_item', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Checklist')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ActivityUser')),
            ],
            options={
                'ordering': ('item',),
            },
        ),
        migrations.AddField(
            model_name='checklist',
            name='agreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProjectAgreement', verbose_name='Project Initiation'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Country'),
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contributor', models.CharField(blank=True, max_length=135, null=True)),
                ('description_of_contribution', models.CharField(blank=True, max_length=255, null=True)),
                ('proposed_value', models.IntegerField(blank=True, default=0, null=True, verbose_name='Value')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('agreement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProjectAgreement', verbose_name='Project Initiation')),
                ('complete', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProjectComplete')),
            ],
            options={
                'ordering': ('contributor',),
            },
        ),
        migrations.CreateModel(
            name='Benchmarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent_complete', models.IntegerField(blank=True, null=True, verbose_name='% complete')),
                ('percent_cumulative', models.IntegerField(blank=True, null=True, verbose_name='% cumulative completion')),
                ('est_start_date', models.DateTimeField(blank=True, null=True)),
                ('est_end_date', models.DateTimeField(blank=True, null=True)),
                ('actual_start_date', models.DateTimeField(blank=True, null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('budget', models.IntegerField(blank=True, null=True, verbose_name='Estimated Budget')),
                ('cost', models.IntegerField(blank=True, null=True, verbose_name='Actual Cost')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('agreement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProjectAgreement', verbose_name='Project Initiation')),
                ('complete', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProjectComplete')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.SiteProfile')),
            ],
            options={
                'verbose_name_plural': 'Project Components',
                'ordering': ('description',),
            },
        ),
        migrations.CreateModel(
            name='ApprovalAuthority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_limit', models.IntegerField(blank=True, null=True)),
                ('fund', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('approval_user', models.ForeignKey(blank=True, help_text='User with Approval Authority', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auth_approving', to='workflow.ActivityUser')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Country')),
            ],
            options={
                'verbose_name_plural': 'Activity Approval Authority',
                'ordering': ('approval_user',),
            },
        ),
        migrations.AddField(
            model_name='adminlevelthree',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.District', verbose_name='Admin Level 2'),
        ),
        migrations.AddField(
            model_name='activityuser',
            name='countries',
            field=models.ManyToManyField(blank=True, related_name='countries', to='workflow.Country', verbose_name='Accessible Countries'),
        ),
        migrations.AddField(
            model_name='activityuser',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Country'),
        ),
        migrations.AddField(
            model_name='activityuser',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Organization'),
        ),
        migrations.AddField(
            model_name='activityuser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='activity_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ActivitySites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('agency_name', models.CharField(blank=True, max_length=255, null=True)),
                ('agency_url', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_report_url', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_tables_url', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_tables_user', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_tables_token', models.CharField(blank=True, max_length=255, null=True)),
                ('privacy_disclaimer', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
            options={
                'verbose_name_plural': 'Activity Sites',
            },
        ),
        migrations.CreateModel(
            name='ActivityBookmarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('bookmark_url', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.Program')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activitybookmark', to='workflow.ActivityUser')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ActivityUserProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Report Activity User',
                'verbose_name_plural': 'Report Activity Users',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('workflow.activityuser',),
        ),
    ]
